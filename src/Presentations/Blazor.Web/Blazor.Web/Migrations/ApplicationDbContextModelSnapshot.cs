// <auto-generated />
using System;
using Blazor.Web;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blazor.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blazor.Web.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Blazor.Web.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrugIdAndQuantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExcessAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnderPaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb45386c-1ef8-40f4-b466-84ac27ae6686"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4657),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "baed7369-a1f4-4311-b82f-b9e4a3b0de7b",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        },
                        new
                        {
                            Id = new Guid("4cbdf427-92c9-4d23-bc91-7e6c9b4aa957"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4677),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "53b0d8dd-7ab7-4dc6-bf74-e4e9af84729a",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9062"
                        },
                        new
                        {
                            Id = new Guid("0d7c455c-2760-4066-ad1d-9e6b06c70d07"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4694),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "cef13006-aed2-49fc-a8ca-8c6d76132aff",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9063"
                        },
                        new
                        {
                            Id = new Guid("df399d17-4fb2-4947-8159-313d53d340d7"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4710),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "da9dc981-ff65-4d43-8e7f-ae66e52b8039",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        },
                        new
                        {
                            Id = new Guid("f1b4da52-8c2b-4859-b32a-47b68ea13c40"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4727),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "3bb48ace-95ae-448e-8b0e-5cd0d292552a",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9062"
                        },
                        new
                        {
                            Id = new Guid("2d125d02-0a2e-4d6e-bd6b-e3fd30228bd2"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4745),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "3b57d787-ad41-41e2-a722-3ff80d715f0a",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9063"
                        },
                        new
                        {
                            Id = new Guid("33f6e693-2937-4b81-af7c-824bf6f261e1"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4762),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "90b7f2ff-9722-485e-adc8-9beffc464308",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        },
                        new
                        {
                            Id = new Guid("b0476c18-2c93-4d48-8683-49e56c0eabc0"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4814),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "d9a5f3b8-9d40-44c8-9c0f-379ee9306ed9",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9062"
                        },
                        new
                        {
                            Id = new Guid("97ee73b5-113c-4028-8cde-e375513f804c"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4831),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "cdba01dc-5f65-46ec-a242-e927cc1ce6d2",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9063"
                        },
                        new
                        {
                            Id = new Guid("832f5d74-0c38-410b-a2f2-e4a68d4c7f2f"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4850),
                            Deadline = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrugIdAndQuantity = "",
                            ExcessAmount = 0m,
                            IsDeleted = false,
                            RequestId = "b3c4c339-009c-4ea8-aa6c-872bcb856301",
                            UnderPaidAmount = 0m,
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        });
                });

            modelBuilder.Entity("Blazor.Web.BillServices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ServiceId");

                    b.ToTable("BillServices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c38be7c3-4fe2-4d6d-bce9-299b590e5733"),
                            BillId = new Guid("bb45386c-1ef8-40f4-b466-84ac27ae6686"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4893),
                            IsDeleted = false,
                            ServiceId = new Guid("20b748be-29f9-4d9d-8fe0-09f9a8cffd7e")
                        },
                        new
                        {
                            Id = new Guid("2fa34f5d-c3d6-4b34-a0b2-bbe9184a88a9"),
                            BillId = new Guid("bb45386c-1ef8-40f4-b466-84ac27ae6686"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4920),
                            IsDeleted = false,
                            ServiceId = new Guid("5f2883f6-0a20-422c-8de5-643ec84baeab")
                        },
                        new
                        {
                            Id = new Guid("89c4ab7f-ff7d-4209-946f-5e56f71fedef"),
                            BillId = new Guid("4cbdf427-92c9-4d23-bc91-7e6c9b4aa957"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4938),
                            IsDeleted = false,
                            ServiceId = new Guid("7e08903a-ebaa-4be7-a760-cf4511c06db6")
                        },
                        new
                        {
                            Id = new Guid("27ec1b1d-14ce-4d63-a44b-b0552f7c63a5"),
                            BillId = new Guid("4cbdf427-92c9-4d23-bc91-7e6c9b4aa957"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4956),
                            IsDeleted = false,
                            ServiceId = new Guid("26230c2b-2edd-486d-837a-3feca30bcb03")
                        },
                        new
                        {
                            Id = new Guid("8ec32cab-9ada-4303-9f4e-01b7ffb9187c"),
                            BillId = new Guid("0d7c455c-2760-4066-ad1d-9e6b06c70d07"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4985),
                            IsDeleted = false,
                            ServiceId = new Guid("454696bc-7737-4792-a3ec-f160f2117296")
                        },
                        new
                        {
                            Id = new Guid("150a759a-34dc-4d98-a7fd-688280e35f1c"),
                            BillId = new Guid("0d7c455c-2760-4066-ad1d-9e6b06c70d07"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5005),
                            IsDeleted = false,
                            ServiceId = new Guid("0e1bf384-2ef7-48a8-bfbb-458afa0824ce")
                        },
                        new
                        {
                            Id = new Guid("30f084ff-ff49-4d7f-9e6c-7108254edd04"),
                            BillId = new Guid("df399d17-4fb2-4947-8159-313d53d340d7"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5023),
                            IsDeleted = false,
                            ServiceId = new Guid("b47b3a07-adbd-4ff1-8cd2-8daf847957d7")
                        },
                        new
                        {
                            Id = new Guid("5c928507-55d7-40e9-a8d2-f689e89b8b69"),
                            BillId = new Guid("df399d17-4fb2-4947-8159-313d53d340d7"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5041),
                            IsDeleted = false,
                            ServiceId = new Guid("33454a63-5962-4b58-aab6-7b067015d622")
                        },
                        new
                        {
                            Id = new Guid("92599a92-68cd-4f0f-b2b0-c5d61111f278"),
                            BillId = new Guid("f1b4da52-8c2b-4859-b32a-47b68ea13c40"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5058),
                            IsDeleted = false,
                            ServiceId = new Guid("86af131d-b2ab-4ad2-9301-e58be72d360f")
                        },
                        new
                        {
                            Id = new Guid("666fc434-7505-458e-84a9-1f4645b556b4"),
                            BillId = new Guid("f1b4da52-8c2b-4859-b32a-47b68ea13c40"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5145),
                            IsDeleted = false,
                            ServiceId = new Guid("20b748be-29f9-4d9d-8fe0-09f9a8cffd7e")
                        },
                        new
                        {
                            Id = new Guid("dbc5c03b-200f-4b28-a5dd-0830dae31f4a"),
                            BillId = new Guid("2d125d02-0a2e-4d6e-bd6b-e3fd30228bd2"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5164),
                            IsDeleted = false,
                            ServiceId = new Guid("5f2883f6-0a20-422c-8de5-643ec84baeab")
                        },
                        new
                        {
                            Id = new Guid("94d6ae2b-9e94-4203-a23f-5d9c79c09362"),
                            BillId = new Guid("33f6e693-2937-4b81-af7c-824bf6f261e1"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5180),
                            IsDeleted = false,
                            ServiceId = new Guid("7e08903a-ebaa-4be7-a760-cf4511c06db6")
                        },
                        new
                        {
                            Id = new Guid("2f0203ee-4616-4d47-aa1a-f34d0af4b3a5"),
                            BillId = new Guid("b0476c18-2c93-4d48-8683-49e56c0eabc0"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5201),
                            IsDeleted = false,
                            ServiceId = new Guid("26230c2b-2edd-486d-837a-3feca30bcb03")
                        },
                        new
                        {
                            Id = new Guid("60845a54-c54f-4076-b0fc-42a602485a73"),
                            BillId = new Guid("97ee73b5-113c-4028-8cde-e375513f804c"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5218),
                            IsDeleted = false,
                            ServiceId = new Guid("454696bc-7737-4792-a3ec-f160f2117296")
                        },
                        new
                        {
                            Id = new Guid("afcb56e6-3d30-4f88-96bd-68e89c4bf572"),
                            BillId = new Guid("832f5d74-0c38-410b-a2f2-e4a68d4c7f2f"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5236),
                            IsDeleted = false,
                            ServiceId = new Guid("0e1bf384-2ef7-48a8-bfbb-458afa0824ce")
                        });
                });

            modelBuilder.Entity("Blazor.Web.Drug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drugs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7550f858-084b-4a47-86ca-c53a3fee8737"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4203),
                            Description = "Atorvastatin",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("8fb48dac-ea0e-468c-8e40-94cbd52d53bc"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4234),
                            Description = "Esomeprazole",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("797c16b3-9f66-4619-8068-3af911e954c2"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4250),
                            Description = "Clopidogrel",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("c375d1ed-b87f-4dbb-a79e-0acceba91935"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4266),
                            Description = "Fluticasone/Salmeterol",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("ef582be5-01fd-41c7-8d03-a2746f281eff"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4284),
                            Description = "Montelukast",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("242e8bc8-61a9-41c6-8683-4164b8e973c2"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4301),
                            Description = "Epoetin Alfa",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 90m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("1152c0cb-a974-462b-8c9c-14987a1debda"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4317),
                            Description = "Insulin Glargine",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 110m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("01a7ebc1-21f0-4744-88ec-68861afd37bb"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4333),
                            Description = "Duloxetine",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 120m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("cd317c57-05b5-4b4f-8e40-314ee3d6992f"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4349),
                            Description = "Lisdexamfetamine",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 130m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("adcd5b3c-7c25-4e42-90ad-e957e9573b65"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4366),
                            Description = "Pregabalin",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 140m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("e4980c62-77a8-488a-9e47-cf8bfa0bf8c9"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4382),
                            Description = "Tiotropium",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 150m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("ee21ce39-eedb-4873-a705-4f9aa73e9cae"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4398),
                            Description = "Sitagliptin",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 160m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("69516182-4353-4f3d-96d3-c28bb31e34cb"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4413),
                            Description = "Nebivolol",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 170m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("a52bb0e3-4a2d-4bb9-a7df-7346b39d5ea4"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4428),
                            Description = "Buprenorphine/Naloxone",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 180m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("30e96ac3-d243-4de3-9995-94e2bdb2d12c"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4444),
                            Description = "Oseltamivir",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 190m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("c450243b-0bef-422b-9209-0ed5a64ea359"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4459),
                            Description = "Lisinopril",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 200m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("cd9810ab-4363-48fb-ab22-8326b02b9300"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4474),
                            Description = "Amlodipine",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 210m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("88125653-180b-445c-94bf-51003eb1c5d3"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4492),
                            Description = "Lisinopril",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 220m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("8dc2966c-86db-4fdb-90ef-f1f4aaa0fbc7"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4507),
                            Description = "Metformin",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 230m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("30ee967a-8b14-466c-ad12-06a05493cdd3"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4593),
                            Description = "Lenalidomide",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2000m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("abaf2a73-f650-4795-a8d6-7d517857c4c2"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4618),
                            Description = "Nivolumab",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2100m,
                            Quantity = 0,
                            Supplier = "USA"
                        },
                        new
                        {
                            Id = new Guid("a079289f-4ef6-4463-9884-d931108cb1dc"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4634),
                            Description = "Pembrolizumab",
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2200m,
                            Quantity = 0,
                            Supplier = "USA"
                        });
                });

            modelBuilder.Entity("Blazor.Web.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MediaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Blazor.Web.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("baed7369-a1f4-4311-b82f-b9e4a3b0de7b"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5598),
                            IsDeleted = true,
                            Symptoms = "1,2,8",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        },
                        new
                        {
                            Id = new Guid("53b0d8dd-7ab7-4dc6-bf74-e4e9af84729a"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5618),
                            IsDeleted = true,
                            Symptoms = "11,12,13",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9062"
                        },
                        new
                        {
                            Id = new Guid("cef13006-aed2-49fc-a8ca-8c6d76132aff"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5634),
                            IsDeleted = true,
                            Symptoms = "17,18,7",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9063"
                        },
                        new
                        {
                            Id = new Guid("da9dc981-ff65-4d43-8e7f-ae66e52b8039"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5698),
                            IsDeleted = true,
                            Symptoms = "26,27,32",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        },
                        new
                        {
                            Id = new Guid("3bb48ace-95ae-448e-8b0e-5cd0d292552a"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5718),
                            IsDeleted = true,
                            Symptoms = "6,8,10",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9062"
                        },
                        new
                        {
                            Id = new Guid("3b57d787-ad41-41e2-a722-3ff80d715f0a"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5735),
                            IsDeleted = true,
                            Symptoms = "7,24,20",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9063"
                        },
                        new
                        {
                            Id = new Guid("90b7f2ff-9722-485e-adc8-9beffc464308"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5751),
                            IsDeleted = true,
                            Symptoms = "13,14,11",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        },
                        new
                        {
                            Id = new Guid("d9a5f3b8-9d40-44c8-9c0f-379ee9306ed9"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5768),
                            IsDeleted = true,
                            Symptoms = "22,20,17",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9062"
                        },
                        new
                        {
                            Id = new Guid("cdba01dc-5f65-46ec-a242-e927cc1ce6d2"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5783),
                            IsDeleted = true,
                            Symptoms = "31,32,26",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9063"
                        },
                        new
                        {
                            Id = new Guid("b3c4c339-009c-4ea8-aa6c-872bcb856301"),
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5799),
                            IsDeleted = true,
                            Symptoms = "10,9,8",
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061"
                        });
                });

            modelBuilder.Entity("Blazor.Web.RoomEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomEvents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41224e8f-4f2c-4d42-b2c0-12ca428f14a5"),
                            BillId = "bb45386c-1ef8-40f4-b466-84ac27ae6686",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5272),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "105",
                            ServiceId = "20b748be-29f9-4d9d-8fe0-09f9a8cffd7e",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            Id = new Guid("28af7272-b7bd-47df-8c31-3fd481594e3b"),
                            BillId = "bb45386c-1ef8-40f4-b466-84ac27ae6686",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5312),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "106",
                            ServiceId = "5f2883f6-0a20-422c-8de5-643ec84baeab",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "c54274f0-5603-4f37-a400-c17ac38a9060"
                        },
                        new
                        {
                            Id = new Guid("1b8cebf1-ab2a-4823-9306-00ed165949d5"),
                            BillId = "4cbdf427-92c9-4d23-bc91-7e6c9b4aa957",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5332),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "201",
                            ServiceId = "7e08903a-ebaa-4be7-a760-cf4511c06db6",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "b7ec8772-8d5c-4fec-92e0-dfc7bfa74dd3"
                        },
                        new
                        {
                            Id = new Guid("5b054ebf-8605-48f6-92d2-a527a90ff29b"),
                            BillId = "4cbdf427-92c9-4d23-bc91-7e6c9b4aa957",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5349),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "202",
                            ServiceId = "26230c2b-2edd-486d-837a-3feca30bcb03",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "cbf20cfa-b5f9-43ca-a54c-e2a18f05fd1c"
                        },
                        new
                        {
                            Id = new Guid("e5fd1ba3-3b35-472d-9cb5-4d215f73be37"),
                            BillId = "0d7c455c-2760-4066-ad1d-9e6b06c70d07",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5366),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "203",
                            ServiceId = "454696bc-7737-4792-a3ec-f160f2117296",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            Id = new Guid("92f49ddb-f751-4d3e-8839-7a4b0e52d8e8"),
                            BillId = "0d7c455c-2760-4066-ad1d-9e6b06c70d07",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5388),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "206",
                            ServiceId = "0e1bf384-2ef7-48a8-bfbb-458afa0824ce",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "c54274f0-5603-4f37-a400-c17ac38a9060"
                        },
                        new
                        {
                            Id = new Guid("7f88340c-20cd-470b-82d9-a0dfb5fbff4a"),
                            BillId = "df399d17-4fb2-4947-8159-313d53d340d7",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5406),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "105",
                            ServiceId = "b47b3a07-adbd-4ff1-8cd2-8daf847957d7",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "b7ec8772-8d5c-4fec-92e0-dfc7bfa74dd3"
                        },
                        new
                        {
                            Id = new Guid("6dc55127-c828-411f-8492-4f8b423aa57c"),
                            BillId = "df399d17-4fb2-4947-8159-313d53d340d7",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5422),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "301",
                            ServiceId = "33454a63-5962-4b58-aab6-7b067015d622",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "cbf20cfa-b5f9-43ca-a54c-e2a18f05fd1c"
                        },
                        new
                        {
                            Id = new Guid("6bf0b352-d085-46ef-8f21-bf9a2b441c61"),
                            BillId = "f1b4da52-8c2b-4859-b32a-47b68ea13c40",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5439),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "404",
                            ServiceId = "86af131d-b2ab-4ad2-9301-e58be72d360f",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            Id = new Guid("38a485ff-6540-41ea-b622-fa39b1b21661"),
                            BillId = "f1b4da52-8c2b-4859-b32a-47b68ea13c40",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5458),
                            EndDate = new DateTime(2024, 1, 17, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "105",
                            ServiceId = "20b748be-29f9-4d9d-8fe0-09f9a8cffd7e",
                            StartDate = new DateTime(2024, 1, 17, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "c54274f0-5603-4f37-a400-c17ac38a9060"
                        },
                        new
                        {
                            Id = new Guid("691f83d7-312d-49d2-be62-479074864112"),
                            BillId = "2d125d02-0a2e-4d6e-bd6b-e3fd30228bd2",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5475),
                            EndDate = new DateTime(2024, 1, 27, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "106",
                            ServiceId = "5f2883f6-0a20-422c-8de5-643ec84baeab",
                            StartDate = new DateTime(2024, 1, 27, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "b7ec8772-8d5c-4fec-92e0-dfc7bfa74dd3"
                        },
                        new
                        {
                            Id = new Guid("a6f133ac-7e8c-4d59-9fb2-088de81d2986"),
                            BillId = "33f6e693-2937-4b81-af7c-824bf6f261e1",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5492),
                            EndDate = new DateTime(2024, 1, 28, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "201",
                            ServiceId = "7e08903a-ebaa-4be7-a760-cf4511c06db6",
                            StartDate = new DateTime(2024, 1, 28, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "cbf20cfa-b5f9-43ca-a54c-e2a18f05fd1c"
                        },
                        new
                        {
                            Id = new Guid("957279de-9814-409d-bc90-068e34435cab"),
                            BillId = "b0476c18-2c93-4d48-8683-49e56c0eabc0",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5509),
                            EndDate = new DateTime(2024, 1, 29, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "202",
                            ServiceId = "26230c2b-2edd-486d-837a-3feca30bcb03",
                            StartDate = new DateTime(2024, 1, 29, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            Id = new Guid("a3087864-4912-46ca-b429-469a6a360498"),
                            BillId = "97ee73b5-113c-4028-8cde-e375513f804c",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5531),
                            EndDate = new DateTime(2024, 1, 30, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "203",
                            ServiceId = "454696bc-7737-4792-a3ec-f160f2117296",
                            StartDate = new DateTime(2024, 1, 30, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "c54274f0-5603-4f37-a400-c17ac38a9060"
                        },
                        new
                        {
                            Id = new Guid("550089e0-2e9c-4f9e-b0a6-cd2934911390"),
                            BillId = "832f5d74-0c38-410b-a2f2-e4a68d4c7f2f",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(5548),
                            EndDate = new DateTime(2024, 1, 31, 15, 24, 5, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RoomId = "206",
                            ServiceId = "0e1bf384-2ef7-48a8-bfbb-458afa0824ce",
                            StartDate = new DateTime(2024, 1, 31, 14, 24, 5, 0, DateTimeKind.Unspecified),
                            UserIds = "b7ec8772-8d5c-4fec-92e0-dfc7bfa74dd3"
                        });
                });

            modelBuilder.Entity("Blazor.Web.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CalculationType")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20b748be-29f9-4d9d-8fe0-09f9a8cffd7e"),
                            CalculationType = 0,
                            Color = "#92d050",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(3943),
                            IsDeleted = false,
                            Name = "Routine Check-up",
                            Price = 80.00m
                        },
                        new
                        {
                            Id = new Guid("5f2883f6-0a20-422c-8de5-643ec84baeab"),
                            CalculationType = 0,
                            Color = "#92d050",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4007),
                            IsDeleted = false,
                            Name = "Blood Test",
                            Price = 30.00m
                        },
                        new
                        {
                            Id = new Guid("7e08903a-ebaa-4be7-a760-cf4511c06db6"),
                            CalculationType = 0,
                            Color = "#ffc000",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4027),
                            IsDeleted = false,
                            Name = "X-ray",
                            Price = 150.00m
                        },
                        new
                        {
                            Id = new Guid("26230c2b-2edd-486d-837a-3feca30bcb03"),
                            CalculationType = 0,
                            Color = "#ff0000",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4046),
                            IsDeleted = false,
                            Name = "MRI Scan",
                            Price = 750.00m
                        },
                        new
                        {
                            Id = new Guid("454696bc-7737-4792-a3ec-f160f2117296"),
                            CalculationType = 0,
                            Color = "#ffc000",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4063),
                            IsDeleted = false,
                            Name = "Ultrasound",
                            Price = 300.00m
                        },
                        new
                        {
                            Id = new Guid("0e1bf384-2ef7-48a8-bfbb-458afa0824ce"),
                            CalculationType = 0,
                            Color = "#92d050",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4084),
                            IsDeleted = false,
                            Name = "Physical Therapy Session",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("b47b3a07-adbd-4ff1-8cd2-8daf847957d7"),
                            CalculationType = 0,
                            Color = "#ffc000",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4101),
                            IsDeleted = false,
                            Name = "Dental Cleaning",
                            Price = 150.00m
                        },
                        new
                        {
                            Id = new Guid("33454a63-5962-4b58-aab6-7b067015d622"),
                            CalculationType = 0,
                            Color = "#92d050",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4159),
                            IsDeleted = false,
                            Name = "Eye Examination",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("86af131d-b2ab-4ad2-9301-e58be72d360f"),
                            CalculationType = 0,
                            Color = "#92d050",
                            CreatedDate = new DateTime(2024, 8, 12, 22, 5, 15, 302, DateTimeKind.Local).AddTicks(4183),
                            IsDeleted = false,
                            Name = "Dermatology Consultation",
                            Price = 120.00m
                        });
                });

            modelBuilder.Entity("Blazor.Web.BillServices", b =>
                {
                    b.HasOne("Blazor.Web.Bill", "Bill")
                        .WithMany("BillServices")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blazor.Web.Service", "Service")
                        .WithMany("BillServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Blazor.Web.Bill", b =>
                {
                    b.Navigation("BillServices");
                });

            modelBuilder.Entity("Blazor.Web.Service", b =>
                {
                    b.Navigation("BillServices");
                });
#pragma warning restore 612, 618
        }
    }
}
