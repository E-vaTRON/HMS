// <auto-generated />
using System;
using Blazor.Web;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blazor.Web.Migrations.IdentityDb
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20240722145643_Add_Financists")]
    partial class Add_Financists
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blazor.Web.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainTasks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174000",
                            MainTasks = "Manage users, roles, and system settings",
                            Mission = "Manage the entire system",
                            Name = "Admin",
                            NormalizedName = "ADMIN",
                            RoleIcon = "default-icon",
                            Summary = "Administrator role"
                        },
                        new
                        {
                            Id = "c54274f0-5603-4f37-a400-c17ac38a9060",
                            MainTasks = "Don't cause any troubles and damage",
                            Mission = "Obey the rules",
                            Name = "Member",
                            NormalizedName = "MEMBER",
                            RoleIcon = "member-icon",
                            Summary = "Member role"
                        });
                });

            modelBuilder.Entity("Blazor.Web.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Block")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Lot")
                        .HasColumnType("int");

                    b.Property<int>("LotSize")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phase")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignalRConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "123e4567-e89b-12d3-a456-426614174000",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "23f5a3fa-0ca2-410d-95c5-ba9fc96e3e0d",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mpgatdula@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mark",
                            IsDeleted = false,
                            LastName = "Gatdula",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "Pogi",
                            NormalizedEmail = "MPGATDULA@GMAIL.COM",
                            NormalizedUserName = "MPGATDULA",
                            PasswordHash = "AQAAAAIAAYagAAAAEAOhZtaate22pQcObzi50TBSIe0sGfRkgiTPLrws5saH550ESe0XfzPA7scdD3LSVQ==",
                            Phase = 0,
                            PhoneNumber = "09191234567",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e7c2df88-227e-4b8e-9414-7c89b5e8443f",
                            TwoFactorEnabled = false,
                            UserName = "MpGatdula"
                        },
                        new
                        {
                            Id = "c54274f0-5603-4f37-a400-c17ac38a9060",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "f1da4e1c-147d-4db4-ab2e-a8f7fe05392d",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jphizon@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jason Paul",
                            IsDeleted = false,
                            LastName = "Hizon",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "Swabe",
                            NormalizedEmail = "JPHIZON@GMAIL.COM",
                            NormalizedUserName = "JPHIZON",
                            PasswordHash = "AQAAAAIAAYagAAAAENJARwCxnKCDtqK/NdLVdK7HJX4ke8ep4B5e0I5CcB0/MTY4c9CB/LNxsPtu8nvZmA==",
                            Phase = 0,
                            PhoneNumber = "09191234568",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fdeae6fb-8c43-44f1-bd9f-ccdd29fa2210",
                            TwoFactorEnabled = false,
                            UserName = "JpHizon"
                        },
                        new
                        {
                            Id = "b7ec8772-8d5c-4fec-92e0-dfc7bfa74dd3",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "d889d787-4865-47d4-bdbf-bd830be88093",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "drsmith@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Smith",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "A.",
                            NormalizedEmail = "DRSMITH@GMAIL.COM",
                            NormalizedUserName = "DRSMITH",
                            PasswordHash = "AQAAAAIAAYagAAAAEBw4G6PzjbdwiO488yfoAbvn9W3IvZjetjKVJDc6j1YtYvh1Q/1VrJRQ+9OBhxaSyQ==",
                            Phase = 0,
                            PhoneNumber = "09191234569",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "72f5cb75-fd06-4516-8ebe-fa430d9951dd",
                            TwoFactorEnabled = false,
                            UserName = "DrSmith"
                        },
                        new
                        {
                            Id = "cbf20cfa-b5f9-43ca-a54c-e2a18f05fd1c",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "680ec474-f0de-4f42-8cd7-03c19a619222",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "drdoe@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jane",
                            IsDeleted = false,
                            LastName = "Doe",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "B.",
                            NormalizedEmail = "DRDOE@GMAIL.COM",
                            NormalizedUserName = "DRDOE",
                            PasswordHash = "AQAAAAIAAYagAAAAEL/I3RLl/pC+7DYwIdPfo5wBRJJpuytAvhfOOM0F4myEqCXaHuucZd2iRkVZC4Daew==",
                            Phase = 0,
                            PhoneNumber = "09191234570",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "eb22171f-9e35-4807-9c32-14986c6138d4",
                            TwoFactorEnabled = false,
                            UserName = "DrDoe"
                        },
                        new
                        {
                            Id = "ffbfde38-3b88-48b4-910d-86dbcab5ba02",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "d9a55bcd-e5ac-4d4f-8b03-4e70ce53cdef",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emilybrown@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Emily",
                            IsDeleted = false,
                            LastName = "Brown",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "C.",
                            NormalizedEmail = "EMILYBROWN@GMAIL.COM",
                            NormalizedUserName = "EMILYBROWN",
                            PasswordHash = "AQAAAAIAAYagAAAAEJvkgJxq7cqrQLVL1cwWlBvTmd9uEJT+VWAug2GtrdJHQySwNHir/YLMBKz1s1xukw==",
                            Phase = 0,
                            PhoneNumber = "09191234571",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "38641f2d-ffa1-4263-92b6-589b73000d00",
                            TwoFactorEnabled = false,
                            UserName = "EmilyBrown"
                        },
                        new
                        {
                            Id = "9e60babb-15a9-4efe-837e-2ba0c1516afb",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "f0ae088e-dd34-48ba-b9c7-d750d31a8b7c",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michaelgreen@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Michael",
                            IsDeleted = false,
                            LastName = "Green",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "D.",
                            NormalizedEmail = "MICHAELGREEN@GMAIL.COM",
                            NormalizedUserName = "MICHAELGREEN",
                            PasswordHash = "AQAAAAIAAYagAAAAEECHFUnJIJn9/q/ZFopW7hReMZw7+6y/l/SPCRfJTQsW9p7ucYpwv4nPO20gKl602w==",
                            Phase = 0,
                            PhoneNumber = "09191234572",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c5023ac1-6c48-4a2a-80fe-0202f59d2ea1",
                            TwoFactorEnabled = false,
                            UserName = "MichaelGreen"
                        },
                        new
                        {
                            Id = "ebdaa999-2966-4227-96e2-5a72582c0566",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "d58f601b-aeb9-4a39-809c-3376bed5a6be",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarahwhite@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sarah",
                            IsDeleted = false,
                            LastName = "White",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "E.",
                            NormalizedEmail = "SARAHWHITE@GMAIL.COM",
                            NormalizedUserName = "SARAHWHITE",
                            PasswordHash = "AQAAAAIAAYagAAAAED4eziVaNZQ/FOmUrE1ESsu9nGaTsbcVYP2r/vbkszddQ4MA+bhIm9nv7pAapeT7iQ==",
                            Phase = 0,
                            PhoneNumber = "09191234573",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a5f7b5f3-bd7d-43d5-8127-eca1751c9b3f",
                            TwoFactorEnabled = false,
                            UserName = "SarahWhite"
                        },
                        new
                        {
                            Id = "acbf592e-ed02-4de5-af78-2fb17f2dc872",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "87e8feb6-b80f-4481-b78c-10d44401b18f",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "davidblack@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "David",
                            IsDeleted = false,
                            LastName = "Black",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "F.",
                            NormalizedEmail = "DAVIDBLACK@GMAIL.COM",
                            NormalizedUserName = "DAVIDBLACK",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ+QxIvjkR1YhFVpsmxCQgkVRII06GcQ5EQMYmLvpZlXkpL3zdcKUWjx2lasjOQz6Q==",
                            Phase = 0,
                            PhoneNumber = "09191234574",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7d493946-b259-470c-ba16-2561f791bcb3",
                            TwoFactorEnabled = false,
                            UserName = "DavidBlack"
                        },
                        new
                        {
                            Id = "884241b7-bbe3-43df-a18c-ba082a9ed9f5",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "7cb85639-66a1-4ae2-a74a-23c5fd63c095",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alexjohnson@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Alex",
                            IsDeleted = false,
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "M.",
                            NormalizedEmail = "ALEXJOHNSON@GMAIL.COM",
                            NormalizedUserName = "ALEXJOHNSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEITCMLZ7G78nR4z2mR4cCpTYIfSRV+BHE5Py9iiefUPfetEqRrA5fvEJKHhnA5KiMw==",
                            Phase = 0,
                            PhoneNumber = "09191234569",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ba5d0714-f434-4059-818e-1c1c61eaf428",
                            TwoFactorEnabled = false,
                            UserName = "AlexJohnson"
                        },
                        new
                        {
                            Id = "cae4a30d-112b-4e59-8e25-e5b565262c09",
                            AccessFailedCount = 0,
                            Block = 0,
                            ConcurrencyStamp = "7b5d782c-3126-46d1-a565-8a9f5588afc3",
                            CreatedAt = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emmawilliams@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Emma",
                            IsDeleted = false,
                            LastName = "Williams",
                            LockoutEnabled = false,
                            Lot = 0,
                            LotSize = 0,
                            MiddleName = "L.",
                            NormalizedEmail = "EMMAWILLIAMS@GMAIL.COM",
                            NormalizedUserName = "EMMAWILLIAMS",
                            PasswordHash = "AQAAAAIAAYagAAAAEHfglvAgBLIT+3AjCMmB/Q2nR1UPUZMTUAf9Xb0CjOTQPBUhNYiVZvwcrXiHEwhqiQ==",
                            Phase = 0,
                            PhoneNumber = "09191234570",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0b3e1e77-4340-400b-bad1-2ea92219ab53",
                            TwoFactorEnabled = false,
                            UserName = "EmmaWilliams"
                        },
                        new
                        {
                            Id = "c54274f0-5603-4f37-a400-c17ac38a9061",
                            AccessFailedCount = 0,
                            Block = 1,
                            ConcurrencyStamp = "c2f6c27e-f2de-48aa-8c45-7a30a733519b",
                            CreatedAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "asramos@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Apple",
                            IsDeleted = false,
                            LastName = "Ramos",
                            LockoutEnabled = false,
                            Lot = 1,
                            LotSize = 200,
                            MiddleName = "Sy",
                            NormalizedEmail = "ASRAMOS@GMAIL.COM",
                            NormalizedUserName = "ASRAMOS",
                            PasswordHash = "AQAAAAIAAYagAAAAEAaiXCP1A+PTghi0P1YJG1q/NLVl5fzQkl3kYG3wFaIUz7nekcXCElBi7q24A6YBTQ==",
                            Phase = 1,
                            PhoneNumber = "09191234569",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "44255684-712f-4f4f-a999-2f797b896098",
                            Street = "Orange",
                            TwoFactorEnabled = false,
                            UserName = "AsRamos"
                        },
                        new
                        {
                            Id = "c54274f0-5603-4f37-a400-c17ac38a9062",
                            AccessFailedCount = 0,
                            Block = 2,
                            ConcurrencyStamp = "ac2e27f1-7f02-437a-8fd3-43d4db0c7e7c",
                            CreatedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rkdelacruz@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ronda",
                            IsDeleted = false,
                            LastName = "Dela Cruz",
                            LockoutEnabled = false,
                            Lot = 2,
                            LotSize = 250,
                            MiddleName = "Kidman",
                            NormalizedEmail = "RKDELACRUZ@GMAIL.COM",
                            NormalizedUserName = "RKDELACRUZ",
                            PasswordHash = "AQAAAAIAAYagAAAAEFjp90GLAe9nXfc+DuTwvOZIP7RFBgaxWO6u6sqwaUJekvAKxW7QRCtiGoOBlF8OjA==",
                            Phase = 2,
                            PhoneNumber = "09191234560",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "888cf20a-a503-4179-9b4e-549177d5c4ee",
                            Street = "Lemon",
                            TwoFactorEnabled = false,
                            UserName = "RkDelacruz"
                        },
                        new
                        {
                            Id = "c54274f0-5603-4f37-a400-c17ac38a9063",
                            AccessFailedCount = 0,
                            Block = 3,
                            ConcurrencyStamp = "7afd14e6-bbd8-4ae7-915d-7ed1f16a58fc",
                            CreatedAt = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mmdantes@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mary",
                            IsDeleted = false,
                            LastName = "Dantes",
                            LockoutEnabled = false,
                            Lot = 3,
                            LotSize = 280,
                            MiddleName = "Mar",
                            NormalizedEmail = "MMDANTES@GMAIL.COM",
                            NormalizedUserName = "MMDANTES",
                            PasswordHash = "AQAAAAIAAYagAAAAEH7EPtlBvSJl7zziGxoCV26vNOGE32H8OSqhQKSWXyJtgiuGJSZAk8deYoUmKBtT/w==",
                            Phase = 3,
                            PhoneNumber = "09191234560",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5b2abe14-8145-4ca6-bbf1-b95ed471946d",
                            Street = "Strawberry",
                            TwoFactorEnabled = false,
                            UserName = "MmDantes"
                        });
                });

            modelBuilder.Entity("Blazor.Web.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "123e4567-e89b-12d3-a456-426614174000",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9060",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "b7ec8772-8d5c-4fec-92e0-dfc7bfa74dd3",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "cbf20cfa-b5f9-43ca-a54c-e2a18f05fd1c",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "ffbfde38-3b88-48b4-910d-86dbcab5ba02",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "9e60babb-15a9-4efe-837e-2ba0c1516afb",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "ebdaa999-2966-4227-96e2-5a72582c0566",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "acbf592e-ed02-4de5-af78-2fb17f2dc872",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "884241b7-bbe3-43df-a18c-ba082a9ed9f5",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "cae4a30d-112b-4e59-8e25-e5b565262c09",
                            RoleId = "123e4567-e89b-12d3-a456-426614174000"
                        },
                        new
                        {
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9061",
                            RoleId = "c54274f0-5603-4f37-a400-c17ac38a9060"
                        },
                        new
                        {
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9062",
                            RoleId = "c54274f0-5603-4f37-a400-c17ac38a9060"
                        },
                        new
                        {
                            UserId = "c54274f0-5603-4f37-a400-c17ac38a9063",
                            RoleId = "c54274f0-5603-4f37-a400-c17ac38a9060"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Blazor.Web.UserRole", b =>
                {
                    b.HasOne("Blazor.Web.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blazor.Web.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Blazor.Web.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Blazor.Web.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Blazor.Web.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Blazor.Web.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Blazor.Web.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Blazor.Web.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
